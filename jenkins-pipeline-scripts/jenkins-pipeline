#!groovy
properties([disableConcurrentBuilds()])
pipeline {
//accesses the git master branch
    agent { 
        label 'master'
    	}
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
//builds dockerfile
    stages{
        stage('Docker-build ') { // for display purposes
            steps{
                echo "Enter word...."
                echo "Enter number..."
                echo "Good build"
                echo " ============== start building image =================="
                dir ('project/') {
                	sh 'docker build -t sevgeniiproject/jenkins:latest . '
                }
            }
        }
//build image in dockerhub
        stage("docker push") {
            steps {
                echo " ============== start pushing image =================="
                withCredentials([usernamePassword(credentialsId: 'dockerhub_credentials', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]){
                sh '''
                docker login -u $USERNAME -p $PASSWORD docker.io
                docker push sevgeniiproject/jenkins:latest
                '''
		}
            }
        }
//deleting old running containers
        stage('delete image') {
            steps {
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                sh '''
                docker stop sevgeniiproject/jenkins:latest; docker rm sevgeniiproject/jenkins:latest; docker image prune -f"
                '''
                }
            } 
        }
//run image
        stage('Docker run') {
            steps {
		dir ('project/') {
			echo "==============run=============="
                	sh 'docker run --name jenkins --restart always -d -p 5555:80 -v django:$(pwd) sevgeniiproject/jenkins:latest '
                }
            }
        }
    }
}
